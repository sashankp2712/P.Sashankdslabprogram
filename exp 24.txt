#include <stdio.h>
#include <limits.h>

#define MAX_VERTICES 50

int minKey(int key[], int mstSet[], int num_vertices) {
    int min = INT_MAX, min_index;
    for (int v = 0; v < num_vertices; v++) {
        if (mstSet[v] == 0 && key[v] < min) {
            min = key[v];
            min_index = v;
        }
    }
    return min_index;
}

void printMST(int parent[], int graph[MAX_VERTICES][MAX_VERTICES], int num_vertices) {
    printf("Edge \tWeight\n");
    for (int i = 1; i < num_vertices; i++) {
        printf("%d - %d \t%d \n", parent[i], i, graph[i][parent[i]]);
    }
}

void primMST(int graph[MAX_VERTICES][MAX_VERTICES], int num_vertices) {
    int parent[MAX_VERTICES];
    int key[MAX_VERTICES];
    int mstSet[MAX_VERTICES];
    for (int i = 0; i < num_vertices; i++) {
        key[i] = INT_MAX;
        mstSet[i] = 0;
    }
    key[0] = 0;
    parent[0] = -1;
    for (int count = 0; count < num_vertices - 1; count++) {
        int u = minKey(key, mstSet, num_vertices);
        mstSet[u] = 1;
        for (int v = 0; v < num_vertices; v++) {
            if (graph[u][v] && mstSet[v] == 0 && graph[u][v] < key[v]) {
                parent[v] = u;
                key[v] = graph[u][v];
            }
        }
    }
    printMST(parent, graph, num_vertices);
}

int main() {
    int num_vertices = 5;
    int graph[MAX_VERTICES][MAX_VERTICES] = {
        {0, 2, 0, 6, 0},
        {2, 0, 3, 8, 5},
        {0, 3, 0, 0, 7},
        {6, 8, 0, 0, 9},
        {0, 5, 7, 9, 0}
    };
    primMST(graph, num_vertices);
    return 0;
}